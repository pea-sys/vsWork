@page "/"
@inherits vsWork.Shared.BasePage
@using vsWork.Stores
@using Fluxor
<EditForm Model="@authUser" OnValidSubmit="OnValidSubmit">
    <FluentValidationValidator @ref="fluentValidationValidator " />
    <DataAnnotationsValidator />
    <Microsoft.AspNetCore.Components.Forms.ValidationSummary />
    <div class="form-group">
        <label for="id">UserID</label>
        <input type="text" name="id" @bind-value="authUser.UserId" maxlength="100" class="form-control" />
    </div>
    <div class="form-group">
        <label for="pass">Password</label>
        <input type="password" name="pass" @bind-value="authUser.Password" maxlength="100" class="form-control" />
    </div>
    @*<div class="form-group">
            <input type="checkbox" name="isChache" @bind-value="isCache">
            <label for="isChache">ログイン状態を維持</label>
        </div>*@
    <button class="btn btn-primary" type="submit">ログイン</button>
    <div>[テストユーザー]id:helloworld password:helloworld</div>
</EditForm>

@code{

    private User authUser = new User();
    private bool isCache = false;

    /// <summary>
    /// サブミット押下処理
    /// </summary>
    private async Task OnValidSubmit()
    {
        Dispatcher.Dispatch(new SignInAction(authUser));
    }
}
