@page "/organization"
@inherits vsWork.Shared.BasePage

<vsWork.Components.Dialog Title=@dialogContent.Title
                          ContentLine1=@dialogContent.ContentLine1
                          ContentLine2=@dialogContent.ContentLine2
                          @bind-IsShow=@dialogContent.IsShow
                          OnHide="@OnHideDialog"
                          DispType="@vsWork.Components.Dialog.EnumDispType.YesOrNo" />
<DataGrid TItem="Organization"
          Data="@organizationList"
          @bind-SelectedRow="@selectedOrganization">
    <DataGridColumn TItem="Organization" Field="@nameof(Organization.OrganizationId)" Caption="組織ID" Sortable="false" />
    <DataGridColumn TItem="Organization" Field="@nameof(Organization.OrganizationName)" Caption="組織名称" Editable="true" />
</DataGrid>
<Button Color="Color.Primary" @onclick="OnClickAdd">新規登録</Button>
<Button Color="Color.Secondary" Disabled="@(selectedOrganization==null)" @onclick="OnClickUpdate">更新</Button>
<Button Color="Color.Danger" Disabled="@(selectedOrganization==null)" @onclick="OnClickDelete">削除</Button>

@code {
    [Inject]
    private IRepository<Organization, string> organizationRepository { get; set; }


    private List<Organization> organizationList = new List<Organization>();
    private Organization selectedOrganization;
    private Task dialogTask;

    private vsWork.Components.Dialog.DialogContent dialogContent = new Components.Dialog.DialogContent();

    protected override Task OnInitializedAsync()
    {
        organizationList = new List<Organization>(organizationRepository.FindAll());
        return base.OnInitializedAsync();
    }
    private void OnClickAdd()
    {
        Navigation.NavigateTo("organizationSetting/");
    }
    private void OnClickUpdate()
    {
        Navigation.NavigateTo("organizationSetting/" + selectedOrganization.OrganizationId + "/" + selectedOrganization.OrganizationName);
    }
    private void OnClickDelete()
    {
        dialogTask = new Task(() =>
        {
            organizationRepository.Remove(selectedOrganization.OrganizationId);
            organizationList = new List<Organization>(organizationRepository.FindAll());
            selectedOrganization = null;
            InvokeAsync(StateHasChanged);
        });

        dialogContent.Initialize();
        dialogContent.Title = "削除確認";
        dialogContent.ContentLine1 = selectedOrganization.OrganizationId + "を削除しますか？";
        dialogContent.IsShow = true;
    }
    private void OnHideDialog(string ButtonText)
    {
        if (ButtonText == "はい")
        {
            dialogTask.Start();
        }
        dialogTask = null;
        dialogContent.Initialize();
    }
}
