@page "/SignUp"
<Container Fluid="true">
    <EditForm Model="@regUser" OnValidSubmit="OnValidRegist">
        <FluentValidationValidator @ref="fluentValidationValidator " />
        <DataAnnotationsValidator />
        <Microsoft.AspNetCore.Components.Forms.ValidationSummary />
        <div class="form-group">
            <label for="id">UserID(3文字以上100文字以下)</label>
            <input type="text" name="id" @bind-value="regUser.UserId" maxlength="100" class="form-control" />
        </div>
        <div class="form-group">
            <label for="id">UserName(3文字以上100文字以下)</label>
            <input type="text" name="id" @bind-value="regUser.UserName" maxlength="100" class="form-control" />
        </div>
        <div class="form-group">
            <label for="pass">Password(3文字以上100文字以下)</label>
            <input type="password" name="pass" @bind-value="regUser.Password" maxlength="100" class="form-control" />
        </div>
        <div class="form-group">
            <label for="pass">Password(確認)</label>
            <input type="password" name="pass" @bind-value="regUser.PasswordConfirm" maxlength="100" class="form-control" />
        </div>
        <button class="btn btn-primary" type="submit">登録</button>

    </EditForm>
</Container>

@code {
    [Inject]
    private NavigationManager NavManager { get; set; }
    [Inject]
    private UserActionService userActionService { get; set; }

    private FluentValidationValidator fluentValidationValidator;
    private SignUpUser regUser = new SignUpUser();

    /// <summary>
    /// 登録押下処理
    /// </summary>
    private async Task OnValidRegist()
    {
        userActionService.SignUp(regUser);
        NavManager.NavigateTo("");
    }
}
