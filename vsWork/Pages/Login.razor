@page "/"

<EditForm Model="@authUser" OnValidSubmit="OnValidSubmit">
    <FluentValidationValidator @ref="fluentValidationValidator " />
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="id">UserID</label>
        <input type="text" name="id" @bind-value="authUser.Id" maxlength="100" class="form-control" />
    </div>
    <div class="form-group">
        <label for="pass">Password</label>
        <input type="password" name="pass" @bind-value="authUser.Password" maxlength="100" class="form-control" />
    </div>
    <div class="form-group">
        <input type="checkbox" name="isChache" @bind-value="isCache">
        <label for="isChache">ログイン状態を維持</label>
    </div>
    <button class="btn btn-primary" type="submit">ログイン</button>
</EditForm>

@code{
    [Inject]
    protected NavigationManager NavManager { get; set; }
    [Inject]
    protected IRepository<User, string> UserRepo { get; set; }

    private FluentValidationValidator fluentValidationValidator;

    private User authUser = new User();
    private bool isCache = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
#if DEBUG
        UserRepo.DropTable();
        UserRepo.CreateTable();
        UserRepo.Add(new User { Id = "helloworld", Password = "helloworld" });
        UserRepo.Update(new User { Id = "helloworld", Password = "helloworld" });
#endif
    }
    /// <summary>
    /// サブミット押下処理
    /// </summary>
    private void OnValidSubmit()
    {
        NavManager.NavigateTo("main");
    }
}
