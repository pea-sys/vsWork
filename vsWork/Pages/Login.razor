@page "/"

<EditForm Model="@authUser" OnSubmit="@OnSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="id">UserID</label>
        <input type="text" @bind-value="authUser.Id" maxlength="100" class="form-control" />
    </div>
    <div class="form-group">
        <label for="pass">Password</label>
        <input type="text" @bind-value="authUser.Password" maxlength="100" class="form-control" />
    </div>
    <button class="btn btn-primary" type="submit">ログイン</button>
</EditForm>

@code{
    [Inject]
    protected NavigationManager NavManager { get; set; }
    [Inject]
    protected IRepository<User, string> UserRepo { get; set; }


    private User authUser = new User();

    protected override void OnInitialized()
    {
        base.OnInitialized();
#if DEBUG
        UserRepo.DropTable();
        UserRepo.CreateTable();
        UserRepo.Add(new User { Id = "helloworld;", Password = "helloworld" });
#endif
    }

    private void OnSubmit()
    {
        //TODO:EditFormでパスワード不一致バリデーションやりたい
        // https://blog.beaglesoft.net/entry/2019/02/16/133250


        User validUser = UserRepo.FindById(authUser.Id);
        if (validUser == null)
        {
            // 該当IDなし(何かメッセージ出す)
            return;
        }
        validUser.ConfirmPassword = authUser.Password;
        if (authUser.Password != validUser.Password)
        {
            //パスワード間違い(何かメッセージ出す)
            return;
        }
        NavManager.NavigateTo("main");
    }
}
