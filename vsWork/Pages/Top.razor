@page "/top"
@inherits BasePage

    <vsWork.Components.Dialog Title=@dialogContent.Title
                               ContentLine1=@dialogContent.ContentLine1
                               ContentLine2=@dialogContent.ContentLine2
                               @bind-IsShow=@dialogContent.IsShow />

<div class="col-md-12 text-center">
    <div>
        <vsWork.Components.Clock />
    </div>

    <button class="btn btn-primary" @onclick="PunchIn">出勤</button>
    <button class="btn btn-secondary" @onclick="PunchOut">退勤</button>
</div>

@code {
    [Inject]
    protected IRepository<Attendance, string> attendanceRepository { get; set; }
    [Inject]
    protected IRepository<UserState, string> userStateRepository { get; set; }
    [Inject]
    protected CurrentUserService currentUserService { get; set; }

    private vsWork.Components.Dialog.DialogContent dialogContent = new Components.Dialog.DialogContent();
    /// <summary>
    /// 出勤打刻
    /// </summary>
    private async Task PunchIn()
    {
        if (string.IsNullOrEmpty(currentUserService.UserId))
        {
            return;
        }

        dialogContent.Initialize();

        if (currentUserService.State != UserState.StateType.PunchIn)
        {
            attendanceRepository.Add(new Attendance() { UserId = currentUserService.UserId });
            UserState us = userStateRepository.FindById(currentUserService.UserId);
            currentUserService.ChangeState(us);

            dialogContent.Title = "出勤打刻確認";
            dialogContent.ContentLine1 = "打刻しました";
            dialogContent.ContentLine2 = currentUserService.PunchInTimeStamp.ToLongTimeString();
            dialogContent.IsShow = true;
        }
        else
        {
            dialogContent.Title = "エラー";
            dialogContent.ContentLine1 = "出勤していません";
            dialogContent.ContentLine2 = currentUserService.PunchInTimeStamp.ToLongTimeString();
            dialogContent.IsShow = true;
        }
    }
    /// <summary>
    /// 退勤打刻
    /// </summary>
    private async Task PunchOut()
    {
        dialogContent.Initialize();
        if (currentUserService.State == UserState.StateType.PunchIn)
        {
            ((AttendanceRepository)attendanceRepository).UpdateAtPunchOutTimestamp(new Attendance() { UserId = currentUserService.UserId});
            currentUserService.ChangeState(userStateRepository.FindById(currentUserService.UserId));
            dialogContent.Title = "退勤打刻確認";
            dialogContent.ContentLine1 = "退勤しました";
            dialogContent.IsShow = true;
        }
        else
        {
            dialogContent.Title = "エラー";
            dialogContent.ContentLine1 = "退勤打刻済みです";
            dialogContent.IsShow = true;
        }

    }
}
